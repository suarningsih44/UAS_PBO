
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author jokos
 */
public class Pinjam extends javax.swing.JFrame {
    
    private ArrayList<Product> data;   
    private ArrayList<MahasiswaItem> mahasiswa;

    private DefaultTableModel model ;
    private int loc = -1;
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;

    /**
     * Creates new form Pinjam
     */
    public Pinjam() {
        initComponents();
        mahasiswa = new ArrayList<>();
        mahasiswaTxt.removeAllItems(); // ðŸ‘‰ Bersihkan dulu ComboBox

        try {
            connection = ConnectionManager.getConnection();
            String sql = "SELECT id, nim, nama FROM mahasiswa";
            preparedStatement = connection.prepareStatement(sql);
            resultSet = preparedStatement.executeQuery();

            mahasiswa.clear(); // ðŸ‘‰ Bersihkan array mahasiswa dulu
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String nim = resultSet.getString("nim");
                String nama = resultSet.getString("nama");
                mahasiswa.add(new MahasiswaItem(id, nim, nama));
            }
        } catch (Exception e) {
            System.out.println("TEst");
            e.printStackTrace();
        } finally {
            ConnectionManager.closeConnection(connection);
        }

        // Tambahkan item mahasiswa ke ComboBox
        for (MahasiswaItem item : mahasiswa) {
            mahasiswaTxt.addItem(item.toString()); // Pastikan MahasiswaItem punya toString() bagus
        }

        initializeTable(); // Panggil setelah mahasiswaTxt diisi
    }

    void initializeTable(){
        String[] columnNames = {"ID", "Title", "Category", "Quantity", "Status"};
        data = new ArrayList<>();
        model = new DefaultTableModel(columnNames, 0); // Clear model sebelumnya

        try {
            connection = ConnectionManager.getConnection();
            String sql = "SELECT id, title, category, quantity, status FROM book WHERE status = 'Available'";
            preparedStatement = connection.prepareStatement(sql);
            resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String title = resultSet.getString("title");
                String category = resultSet.getString("category");
                String status = resultSet.getString("status");
                int quantity = resultSet.getInt("quantity");
                data.add(new Product(id, title, category, quantity, status));
            }

            // Tambahkan baris ke model
            for (Product row : data) {
                model.addRow(new Object[]{
                    row.getId(), 
                    row.getTitle(),
                    row.getCategory(),
                    row.getQuantity(),
                    row.getStatus()
                });
            }
        } catch (Exception e) {
            System.out.println("TEst");
            e.printStackTrace();
        } finally {
            ConnectionManager.closeConnection(connection);
        }

        // Set model baru ke JTable (otomatis me-reset isinya)
        table.setModel(model);

        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                loc = table.getSelectedRow();
            }
        });
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        kirimBtn = new javax.swing.JButton();
        quantityTxt = new javax.swing.JSpinner();
        mahasiswaTxt = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel1.setText("List Buku");

        jLabel2.setText("Peminjaman Buku");

        jLabel3.setText("Nama");

        jLabel5.setText("Quantity");

        kirimBtn.setText("Tambah");
        kirimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kirimBtnActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        jMenuItem5.setText("Buku");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem3.setText("Pinjam");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Logout");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(265, 265, 265))
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quantityTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(mahasiswaTxt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(kirimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mahasiswaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(kirimBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kirimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kirimBtnActionPerformed
        // TODO add your handling code here:
        MahasiswaItem selected = null;
        System.out.println(loc);
        for(int i = 0; i<mahasiswa.size(); i++){
            if(mahasiswa.get(i).getId(String.valueOf(mahasiswaTxt.getSelectedItem())) == 1){
                selected = mahasiswa.get(i);
            }
        }
        int selectedId = 0;
        if (selected != null) {
            selectedId = selected.getId();
            System.out.println("ID terpilih: " + selectedId);
        }
        int quantity = (int)quantityTxt.getValue();
        try {
            connection = ConnectionManager.getConnection();

            // 1. INSERT ke tabel peminjaman
            String insertSql = "INSERT INTO peminjaman (id_mahasiswa, id_book, qty) VALUES (?, ?, ?)";
            preparedStatement = connection.prepareStatement(insertSql);
            preparedStatement.setInt(1, selectedId);
            preparedStatement.setInt(2, data.get(loc).getId());
            preparedStatement.setInt(3, quantity);
            preparedStatement.executeUpdate();

            // 2. UPDATE stok buku
            String updateSql = "UPDATE book SET quantity = ? WHERE id = ?";
            preparedStatement = connection.prepareStatement(updateSql);
            int updatedQuantity = data.get(loc).getQuantity() - quantity;
            data.get(loc).setQuantity(updatedQuantity);
            preparedStatement.setInt(1, updatedQuantity);
            preparedStatement.setInt(2, data.get(loc).getId());
            preparedStatement.executeUpdate();

            // Tampilkan lokasi dan refresh tabel
            System.out.println(loc);
            initializeTable();
        } catch (Exception e) {
            System.out.println("TEst");
            e.printStackTrace();
        } finally {
            ConnectionManager.closeConnection(connection);
        }

        
        
        
    }//GEN-LAST:event_kirimBtnActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Pinjam b = new Pinjam();
        b.setVisible(true);
        dispose(); 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        LoginForm b = new LoginForm();
        b.setVisible(true);
        dispose(); 
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        Form b = new Form();
        b.setVisible(true);
        dispose(); 
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pinjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pinjam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kirimBtn;
    private javax.swing.JComboBox<String> mahasiswaTxt;
    private javax.swing.JSpinner quantityTxt;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
