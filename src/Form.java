
import java.util.ArrayList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author jokos
 */
public class Form extends javax.swing.JFrame {
        
    private ArrayList<Product> data;
    private DefaultTableModel model ;
    private int loc = -1;
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;

    /**
     * Creates new form Form
     */
    public Form() {
        initComponents();
        initializeTable();
    }
    
    void initializeTable(){
        String[] columnNames = {"ID", "Title", "Category", "Quantity", "Status"};
        data = new ArrayList<Product>();
        model = new DefaultTableModel(columnNames, 0);
        try {
            connection = ConnectionManager.getConnection();// Create a prepared statement
            String sql = "SELECT id, title, category, quantity,status FROM book";
            preparedStatement = connection.prepareStatement(sql);

            // Execute the query
            resultSet = preparedStatement.executeQuery();

            // Process the result set
            while (resultSet.next()) {
                // Retrieve data from the result set
                int id = Integer.parseInt(resultSet.getString("id"));
                String title = resultSet.getString("title");
                String category = resultSet.getString("category");
                String status = resultSet.getString("status");
                int quantity = Integer.parseInt(resultSet.getString("quantity"));
                data.add(new Product(id,title,category,quantity,status));
            }
            for(Product row : data){
                model.addRow(
                    new Object[]{
                       String.valueOf(row.getId()), 
                       row.getTitle(),
                       row.getCategory(),
                       String.valueOf(row.getQuantity()),
                       row.getStatus(),
                    }
                );
            }
        } catch (Exception e) {
            System.out.println("TEst");
            e.printStackTrace();
        } finally {
            ConnectionManager.closeConnection(connection);
        }
        
        // Create a DefaultTableModel with the column names and 0 rows

        

        // Create the JTable with the model
        table.setModel(model);

        table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                loc = table.getSelectedRow();
                try{
                    kategori.setText(data.get(loc).getCategory());
                    title.setText(data.get(loc).getTitle());
                    quantityTxt.setValue(data.get(loc).getQuantity());
                }catch(Exception e){
                    
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        title = new javax.swing.JTextField();
        kategori = new javax.swing.JTextField();
        kirimBtn = new javax.swing.JButton();
        quantityTxt = new javax.swing.JSpinner();
        ubahBtn = new javax.swing.JButton();
        hapusBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        statusTxt = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel1.setText("List Buku");

        jLabel2.setText("Manajemen Buku");

        jLabel3.setText("Title");

        jLabel4.setText("Kategori");

        jLabel5.setText("Quantity");

        kirimBtn.setText("Tambah");
        kirimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kirimBtnActionPerformed(evt);
            }
        });

        ubahBtn.setText("Ubah");
        ubahBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahBtnActionPerformed(evt);
            }
        });

        hapusBtn.setText("Hapus");
        hapusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Status");

        statusTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Reservated", " " }));

        jMenu1.setText("Menu");

        jMenuItem3.setText("Buku");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Peminjaman");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Logout");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(265, 265, 265))
            .addGroup(layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(kirimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ubahBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hapusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(title)
                    .addComponent(kategori, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(quantityTxt)
                    .addComponent(statusTxt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(kategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kirimBtn)
                            .addComponent(ubahBtn)
                            .addComponent(hapusBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kirimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kirimBtnActionPerformed
        // TODO add your handling code here:
        String no = kategori.getText().trim();
        String nama = title.getText();
        String status = (String) statusTxt.getSelectedItem();
        int quantity = (int)quantityTxt.getValue();
        String numericRegex = "^[0-9]+$";

        // Create Pattern object
        Pattern pattern = Pattern.compile(numericRegex);

        // Create matcher object
        Matcher matcher = pattern.matcher(no);
            // Regular expression for a simple email validation
            String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";

            // Create Pattern object
            pattern = Pattern.compile(emailRegex);

                           Product temp = new Product(nama,no,quantity,status);
                           try {
                                connection = ConnectionManager.getConnection();// Create a prepared statement
                                String sql = "insert into book (title,category,quantity,status) values (?,?,?,?)";
                                preparedStatement = connection.prepareStatement(sql);

                                preparedStatement.setString(1, temp.getTitle());
                                preparedStatement.setString(2, temp.getCategory());    
                                preparedStatement.setInt(3, temp.getQuantity());   
                                preparedStatement.setString(4, temp.getStatus());                             

                                // Execute the querydata.get(loc).getId()
                                preparedStatement.executeUpdate();
                                initializeTable();

                            } catch (Exception e) {
                                System.out.println("TEst");
                                e.printStackTrace();
                            } finally {
                                ConnectionManager.closeConnection(connection);
                            }
    }//GEN-LAST:event_kirimBtnActionPerformed

    private void ubahBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String no = kategori.getText().trim();
        String nama = title.getText();
        String status = (String) statusTxt.getSelectedItem();
        int quantity = (int)quantityTxt.getValue();
        String numericRegex = "^[0-9]+$";
        System.out.println(status);

        // Create Pattern object
        Pattern pattern = Pattern.compile(numericRegex);

        // Create matcher object
        Matcher matcher = pattern.matcher(no);
        if ( no !="") {     
            // Regular expression for a simple email validation
            String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";

            // Create Pattern object
            pattern = Pattern.compile(emailRegex);

            // Create matcher object
                if ( nama != "") {
                   if(loc != -1){
                       if(quantity >0){
                           Product temp = new Product(nama,no,quantity,status);
                           try {
                                connection = ConnectionManager.getConnection();// Create a prepared statement
                                String sql = "update book set title=?, category=?, quantity = ? , status = ? where id = ?";
                                preparedStatement = connection.prepareStatement(sql);

                                preparedStatement.setString(1, temp.getTitle());
                                preparedStatement.setString(2, temp.getCategory());    
                                preparedStatement.setInt(3, temp.getQuantity());  
                                preparedStatement.setString(4, temp.getStatus()); 
                                preparedStatement.setInt(5, data.get(loc).getId()); 
                                // Execute the querydata.get(loc).getId()
                                preparedStatement.executeUpdate();
                                initializeTable();

                            } catch (Exception e) {
                                System.out.println("TEst");
                                e.printStackTrace();
                            } finally {
                                ConnectionManager.closeConnection(connection);
                            }
                        }
                        else{
                             JOptionPane.showMessageDialog(this, "Jumlah Pengambilan Tidak Valid");
                        }
                   }
                   else{
                        JOptionPane.showMessageDialog(this, "Silahkan Pilih Buku Terlebih Dahulu");
                   }
                } else {
                    JOptionPane.showMessageDialog(this, "Nama Tidak Diisi");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Kategori Tidak Diisi");
            }
    }//GEN-LAST:event_ubahBtnActionPerformed

    private void hapusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBtnActionPerformed
        // TODO add your handling code here:
                   if(loc != -1){
                           try {
                                connection = ConnectionManager.getConnection();// Create a prepared statement
                                String sql = "delete from book  where id = ?";
                                preparedStatement = connection.prepareStatement(sql);
 
                                preparedStatement.setInt(1, data.get(loc).getId()); 
                                // Execute the querydata.get(loc).getId()
                                preparedStatement.executeUpdate();
                                initializeTable();

                            } catch (Exception e) {
                                System.out.println("TEst");
                                e.printStackTrace();
                            } finally {
                                ConnectionManager.closeConnection(connection);
                            }
                        }
                   else{
                        JOptionPane.showMessageDialog(this, "Silahkan Pilih Buku Terlebih Dahulu");
                   }
                
    }//GEN-LAST:event_hapusBtnActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Form b = new Form();
        b.setVisible(true);
        dispose();  
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        Pinjam b = new Pinjam();
        b.setVisible(true);
        dispose();  
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        LoginForm b = new LoginForm();
        b.setVisible(true);
        dispose();  
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hapusBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kategori;
    private javax.swing.JButton kirimBtn;
    private javax.swing.JSpinner quantityTxt;
    private javax.swing.JComboBox<String> statusTxt;
    private javax.swing.JTable table;
    private javax.swing.JTextField title;
    private javax.swing.JButton ubahBtn;
    // End of variables declaration//GEN-END:variables
}
